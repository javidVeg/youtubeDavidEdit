{"ast":null,"code":"var _jsxFileName = \"/Users/davidmartinez/Desktop/devCode Camp/YTClone_front/src/components/CommentsPanel/CommentsPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport './CommentsPanel.css';\nimport { FaThumbsUp, FaThumbsDown } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentsPanel(props) {\n  _s();\n\n  const [commentary, setComment] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/comments/xFrGuyw1V8s\").then(response => {\n      const currentComment = response.data;\n      setComment(currentComment);\n      const likes = commentary.likes;\n      const dislikes = commentary.dislikes;\n      console.log(currentComment);\n      console.log(likes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"words\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      id: \"titlerating\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: commentary.map(comment => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"comment_div\",\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setLikes(likes + 1),\n                  className: \"thumb\",\n                  children: /*#__PURE__*/_jsxDEV(FaThumbsUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 100\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDislikes(dislikes + 1),\n                  className: \"thumb\",\n                  children: /*#__PURE__*/_jsxDEV(FaThumbsDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 107\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dislikes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)]\n            }, comment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.replies.map(reply => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: reply.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 44\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentsPanel, \"WOfmaWZzrZmTnU2hJMkxf/ZbmdU=\");\n\n_c = CommentsPanel;\nexport default CommentsPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPanel\");","map":{"version":3,"sources":["/Users/davidmartinez/Desktop/devCode Camp/YTClone_front/src/components/CommentsPanel/CommentsPanel.jsx"],"names":["axios","React","useState","useEffect","FaThumbsUp","FaThumbsDown","CommentsPanel","props","commentary","setComment","likes","setLikes","dislikes","setDislikes","get","then","response","currentComment","data","console","log","map","comment","text","_id","replies","reply"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,EAAoBC,YAApB,QAAwC,gBAAxC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3B,QAAK,CAACC,UAAD,EAAaC,UAAb,IAA2BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAK,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACAC,EAAAA,SAAS,CAAE,MAAM;AACfH,IAAAA,KAAK,CAACc,GAAN,CAAU,gDAAV,EACIC,IADJ,CACWC,QAAD,IAAc;AACjB,YAAMC,cAAc,GAAGD,QAAQ,CAACE,IAAhC;AACAT,MAAAA,UAAU,CAAEQ,cAAF,CAAV;AACA,YAAMP,KAAK,GAAIF,UAAU,CAACE,KAA1B;AACA,YAAME,QAAQ,GAAEJ,UAAU,CAACI,QAA3B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH,KARJ;AASA,GAVO,EAUL,EAVK,CAAT;AAYE,sBAEG;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,aAAxB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKF,UAAU,CAACa,GAAX,CAAgBC,OAAD,IAAW;AACvB,8BACI;AAAA,oCACA;AAAA,sCACI;AAAI,gBAAA,EAAE,EAAC,aAAP;AAAA,0BAAsBA,OAAO,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,6CAAK;AAAQ,kBAAA,OAAO,EAAE,MAAMZ,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAA4C,kBAAA,SAAS,EAAC,OAAtD;AAAA,yCAA8D,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,wBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,uCAAI;AAAQ,kBAAA,OAAO,EAAI,MAAMG,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAApC;AAAoD,kBAAA,SAAS,EAAC,OAA9D;AAAA,yCAAsE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAtE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,0BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA,eAASU,OAAO,CAACE,GAAjB;AAAA;AAAA;AAAA;AAAA,oBADA,eAQA;AAAA,qCACI;AAAA,0BAAKF,OAAO,CAACG,OAAR,CAAgBJ,GAAhB,CAAqBK,KAAD,IAAS;AAC9B,sCAAO;AAAA,8BAAKA,KAAK,CAACH;AAAX;AAAA;AAAA;AAAA;AAAA,0BAAP;AACC,iBAFA;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiBH,SAlBA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFH;AAyCJ;;GAzDQjB,a;;KAAAA,a;AA2DT,eAAeA,aAAf","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport './CommentsPanel.css';\nimport { FaThumbsUp,FaThumbsDown } from \"react-icons/fa\";\n\nfunction CommentsPanel(props) {\n   const[commentary, setComment] = useState([]);\n   const[likes, setLikes] = useState(0);\n   const [dislikes, setDislikes] = useState(0);\n   useEffect (() => {\n     axios.get(\"http://localhost:5000/api/comments/xFrGuyw1V8s\")\n        .then ((response) => {\n            const currentComment = response.data;\n            setComment (currentComment);  \n            const likes = (commentary.likes);\n            const dislikes=(commentary.dislikes);\n            console.log(currentComment);\n            console.log(likes);\n        })\n    }, []); \n           \n     return (\n      \n        <div id=\"words\">            \n            <div className=\"row\" id=\"titlerating\">\n                <div className=\"col\">\n                    {commentary.map((comment)=>{\n                        return(\n                            <div>\n                            <tr key={comment._id}> \n                                <td id=\"comment_div\">{comment.text}</td> \n                                <td> <button onClick={() => setLikes(likes + 1)} className=\"thumb\"><FaThumbsUp /></button></td>\n                                <td>{likes}</td>\n                                <td><button onClick = {() => setDislikes(dislikes + 1)} className=\"thumb\"><FaThumbsDown /></button></td>\n                                <td>{dislikes}</td>\n                            </tr>\n                            <tr>\n                                <td>{comment.replies.map((reply)=>{\n                                    return(<td>{reply.text}</td>)\n                                    })}</td>\n                             </tr>\n                             </div>\n                           \n                        )\n                    })}                                                                                                                         \n                </div>\n            </div> \n               { /*<form className=\"form-inline\" action=\"http://localhost:5000/api/comments/\" method=\"post\">\n                        <div className= \" form-group\">\n                            <input type=\"text\" className=\"form-control\" name =\"text\" placeholder=\"Post Comment...\" rows=\"1\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"hidden\" className=\"form-control\" name =\"videoId\" value={`${commentary.videoId}`} /> \n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            <div>\n                                \n                        \n                        </div>\n                </form>    */ }\n        </div>\n    )\n}\n\nexport default CommentsPanel;"]},"metadata":{},"sourceType":"module"}