{"ast":null,"code":"var _jsxFileName = \"/Users/davidmartinez/Desktop/devCode Camp/YTClone_front/src/components/RelatedVideos/RelatedVideos.jsx\",\n    _s = $RefreshSig$();\n\n//import { configure } from '@testing-library/dom';\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RelatedVideos(props) {\n  _s();\n\n  //config.get('ApiKey'),\n  const [relatives, setRelatives] = useState([]);\n  useEffect(() => {\n    const relatedVideo = axios.get('https://www.googleapis.com/youtube/v3/search', {\n      params: {\n        relatedToVideoId: {\n          videoId\n        },\n        type: 'video',\n        maxResults: 3,\n        key: {\n          API_key\n        }\n      }\n    }).then(response => {\n      setRelatives(response.data.items);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      align: \"center\",\n      children: \"Related Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), relatives.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"iframe\", {\n        id: \"ytvideo\",\n        type: \"text/html\",\n        width: \"270\",\n        height: \"180\",\n        src: `https://www.youtube.com/embed/${item.id.videoId}?autoplay=1`,\n        title: \"youtube video\",\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RelatedVideos, \"TqY2FOjiDe/pGEtTz4ncGzTVUW4=\");\n\n_c = RelatedVideos;\nexport default RelatedVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatedVideos\");","map":{"version":3,"sources":["/Users/davidmartinez/Desktop/devCode Camp/YTClone_front/src/components/RelatedVideos/RelatedVideos.jsx"],"names":["axios","React","useState","useEffect","RelatedVideos","props","relatives","setRelatives","relatedVideo","get","params","relatedToVideoId","videoId","type","maxResults","key","API_key","then","response","data","items","map","item","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAE,MAAM;AACjB,UAAMK,YAAY,GAAGR,KAAK,CAACS,GAAN,CAAU,8CAAV,EAChB;AACDC,MAAAA,MAAM,EAAE;AACJC,QAAAA,gBAAgB,EAAE;AAACC,UAAAA;AAAD,SADd;AAEJC,QAAAA,IAAI,EAAE,OAFF;AAGJC,QAAAA,UAAU,EAAE,CAHR;AAIJC,QAAAA,GAAG,EAAE;AAACC,UAAAA;AAAD;AAJD;AADP,KADgB,EAQhBC,IARgB,CAQTC,QAAD,IAAc;AACjBX,MAAAA,YAAY,CAACW,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAZ;AAEH,KAXgB,CAArB;AAaC,GAdQ,EAcP,EAdO,CAAT;AAeA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKd,SAAS,CAACe,GAAV,CAAeC,IAAD,IAAS;AACpB,0BACI;AAAQ,QAAA,EAAE,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAC,WAA1B;AAAsC,QAAA,KAAK,EAAC,KAA5C;AAAkD,QAAA,MAAM,EAAC,KAAzD;AACA,QAAA,GAAG,EAAI,iCAAgCA,IAAI,CAACC,EAAL,CAAQX,OAAQ,aADvD;AACqE,QAAA,KAAK,EAAC,eAD3E;AAEA,QAAA,WAAW,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhCQR,a;;KAAAA,a;AAkCT,eAAeA,aAAf","sourcesContent":["//import { configure } from '@testing-library/dom';\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nfunction RelatedVideos(props) {\n    //config.get('ApiKey'),\n    const [relatives, setRelatives] = useState([]);\n    useEffect (() => {\n    const relatedVideo = axios.get('https://www.googleapis.com/youtube/v3/search'\n        ,{\n        params: {\n            relatedToVideoId: {videoId},                   \n            type: 'video',\n            maxResults: 3,\n            key: {API_key}\n        }})\n        .then ((response) => {\n            setRelatives(response.data.items);\n            \n        })   \n   \n    },[]);   \n    return (\n        <div>\n            <h4 align=\"center\">Related Videos</h4>\n            {relatives.map((item) =>{\n                return (\n                    <iframe id=\"ytvideo\" type=\"text/html\" width=\"270\" height=\"180\"\n                    src= {`https://www.youtube.com/embed/${item.id.videoId}?autoplay=1`} title=\"youtube video\"\n                    frameBorder=\"0\"></iframe>\n                );\n\n            })} \n        </div>\n    )\n    \n}\n\nexport default RelatedVideos;"]},"metadata":{},"sourceType":"module"}